#!/usr/bin/env bash
# Use the native MacOS X/macOS mechanisms to perform forward and reverse DNS lookups
# Version: 201609013110 - Initial
# Version: 201808071148 - Updated to perform reverse lookups.
# Version: 202203040951 - A 'quiet' option when only the return code is needed.
# Version: 202303251129 - Slight reorganization and new silly commented code.
# Version: 202504061238 - Refactored for clarity and correctness.

# Initial failure status
STAT=1
VERBOSE=YES
QUERY="$1"

# Handle quiet mode
if [[ "$1" == "-q" ]]; then
    VERBOSE=NO
    QUERY="$2"
fi

# Function to validate IPv4 addresses
is_valid_ipv4() {
    local IFS=.
    read -r o1 o2 o3 o4 <<< "$1"
    for octet in $o1 $o2 $o3 $o4; do
        [[ "$octet" =~ ^[0-9]+$ ]] && (( octet >= 0 && octet <= 255 )) || return 1
    done
    return 0
}

# Function to validate IPv6 addresses using regex
is_valid_ipv6() {
    local regex='^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]))\.){3}(25[0-5]|(2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]))|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]))\.){3}(25[0-5]|(2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])))$'
    [[ "$1" =~ $regex ]]
}

# Perform the appropriate lookup
if is_valid_ipv4 "$QUERY"; then
    LOOKUPTYPE="IPv4"
    LOOKUPRESULT="$(dscacheutil -q host -a ip_address "$QUERY")"
elif is_valid_ipv6 "$QUERY"; then
    LOOKUPTYPE="IPv6"
    LOOKUPRESULT="$(dscacheutil -q host -a ip_address "$QUERY")"
else
    LOOKUPTYPE="HOSTNAME"
    LOOKUPRESULT="$(dscacheutil -q host -a name "$QUERY")"
fi

# Output results and set status
if [[ -n "$LOOKUPRESULT" ]]; then
    [[ "$VERBOSE" == YES ]] && echo "$LOOKUPRESULT"
    STAT=0
fi

exit "$STAT"
